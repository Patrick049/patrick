1、触发器的作用？
1.安全性。能够基于数据库的值使用户具有操作数据库的某种权利。
2.审计。能够跟踪用户对数据库的操作。
3.实现复杂的数据完整性规则
4.实现复杂的非标准的数据库相关完整性规则。
5.同步实时地复制表中的数据。
6.自己主动计算数据值，假设数据的值达到了一定的要求，则进行特定的处理

2、什么是存储过程？用什么来调用？
一组可编程的函数，是为了完成特定功能的SQL语句集，经编译创建并保存在数据库中，
用户可通过指定存储过程的名字并给定参数(需要时)来调用执行。
存储过程是通过  CALL  语向进行调用的

3、索引的作用？和它的优点缺陷是什么？

索引的优点
可以大大加快数据的检索速度，这也是创建索引的最主要的原因。
通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。
索引的缺点
时间方面：创建索引和维护索引要耗费时间，具体地，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，会降低增/改/删的执行效率；
空间方面：索引需要占物理空间。


4、什么叫视图？
MySQL 视图（View）是一种虚拟存在的表，同真实表一样，
视图也由列和行构成，但视图并不实际存在于数据库中。
行和列的数据来自于定义视图的查询中所使用的表，并且还是在使用视图时动态生成的。

一、根据提供的表数据，查询显示对应需要的结果
Student(S,Sname,Sage,Ssex)学生表 S:学号，Sname:姓名，Sage:年龄，Ssex:性别
Course (C,Cname,T)	   课程表 C:课程编号，Cname:课程名字，T:老师编号
SC     (S,C,score)       成绩表 S:学号，C:课程编号，score:成绩
Teacher(T,Tname)          老师表 T:老师编号，Tname:老师名字

1>查询“001”课程比“002”课程成绩高的所有学生的学号；
select s 
from (select * from sc where c=001) t1
     (select * from sc shere c=002) t2
where t1.s=t2.s and t1.score>t2.score;

2>查询平均成绩大于60分的同学的学号和平均成绩；
select s,avg(score) 
from sc
group by s
having avg(score)>60;

3>查询所有同学的学号、姓名、选课数、总成绩；
select sc.s,student.sname,count(c) 选课数,sum(score) 总成绩
from student,sc
where student.s=sc.s
group by sc.s

二、怎么把这样一个表（temp）：
coursed		coursename	score
1		java		70
2		oracle		90
3		xml		40
4		jsp		30
5		servlet		80
---------------------------------------
查询此表后的结果显示如下（及格分数为60）：
courseid	coursename	score	mark
1		java		70	pass
2		oracle		90	pass
3		xml		40	fail
4		jsp		30	fail
5		servlet		80	pass

selec *,if(score>=60,'pass','fail') mark from temp;


三、怎么把这样一个表（temp1）
year	month	amount
1991	1	1.1
1991	2	1.2
1991	3	1.3
1991	4	1.4
1992	1	2.1
1992	2	2.2
1992	3	2.3
1992	4	2.4
查成这样一个结果
year	m1	m2	m3	m4
1991	1.1	1.2	1.3	1.4
1992	2.1	2.2	2.3	2.4

select year,min(amount) m1,min(amount)+0.1 m2,min(amount)+0.2 m3,max(amount)
from temp1
group by year;

四、表内容（temp2）:
Date		win
2005-05-09	胜
2005-05-09	胜
2005-05-09	负
2005-05-09	负
2005-05-10	胜
2005-05-10	负
2005-05-10	负
如果要生成下列结果，该如何写SQL语句？
时间		胜	负
2005-05-09	2	2
2005-05-10	1	2

CREATE TABLE date(
date DATE,
win VARCHAR(1))

INSERT INTO date VALUES('2005-05-09','胜'),('2005-05-09','胜'),('2005-05-09','负'),('2005-05-09','负'),('2005-05-10','胜'),('2005-05-10','负'),('2005-05-10','负')
