一.自我介绍
二.介绍项目：
	1、对项目进行基本介绍
	2、说明自己负责测试的模块
	3、针对部分模块展开进行说明

三.公司测试流程
	进行需求分析与评审
	编写测试计划
	编写测试用例与评审
	执行测试用例
	编写测试报告

四.项目的测试流程	

五.测试用例怎么写
	1.测试需求
	2.测试方案

六.测试流程重点是什么
	1.需求分析
	2.测试计划
	3.测试设计
	4.测试用例
	5.执行测试
	6.测试总结

需求不明确如何处理
	根据掌握的测试理论知识去编写测试用例
	找概要设计和详细设计
	需求规格说明书
	运用已有的测试经验
	参考同类产品项目等
	沟通
	使用xmind梳理测试点

开发没时间修复bug
	

七.项目团队人数

八.几个测试环境
	每个阶段有不同测试环境：
			开发环境
			测试环境
			用户环境
			story ：用户故事
			uat： 用户验收
九.印象深刻的bug
　　　提交一条订单后，查询订单记录找不到
           再重新提交订单，用fiddler工具进行抓包，订单发送成功，接口参数无误，响应信息无误
           可以确定是前端的问题
           　　　
十.linux用的是哪个版本
	redhat(小红帽)

十一.熟悉哪些linux命令
	free top ps netstat df-h cat head tail more less rpm kill find等

十二.搭建测试环境的步骤
　　　1.准备安装包和工具，环境
　　　2.先装Apache服务器
　　　3.再装mysqld数据库
　　　4.后装php脚本语言
　　　5.修改配置文件httpd.conf后，重启服务器
　　　6.再gd库和mysqld数据库的支持
　　　7.解压相应的配置文件
　　　8.检查客户端和服务端网络是否正常，防火墙是否关闭
　　　9.在客户浏览器访问网站

十三.查看Java进程
	ps -ef | grep Java

十四.数据库查找重复的数据
	1.union all：不会删除重复值
	2.union：会筛选重复记录
	3.利用group by分组去重
十五.数据库分组
	1.group by ：分组
十六.数据库排序
	1.order by :排序

十七.数据库的几种连接方式
	1.自连接
	2.子查询
	3.内连接：join......on
	4.左连接: left join......on
	5.右连接: right join......on
	6.全连接: union all或union

十八.sql查询为何这么慢？
	1.内存不足
	2.网络速度慢
	3.查询数据数据量过大
	4.表的关系结构不清晰
	5.查询语句不好
十九.解决方法：
	1.升级硬件
	2.提高服务器内存
	3.提高网速
	4.增加服务器cpu个数
	5.重建索引

二十.如何定位bug
	前端Bug特点：1.界面 2.布局 3.兼容 4.交互相关
	后端Bug特点：1.业务逻辑 2.性能 3.数据 4.安全性 5.压力 6.负载

二十一.解决方法：
	查看日志：查看后端服务日志，有无相关信息
	查看接口：后端接口数据与前端显示的数据对比
	           	1.后端数据错，页面显示错，从后端入手
	          	2.后端数据对，页面显示错，从前端入手

二十二.功能测试和接口测的区别
       功能：
	1.功能测试 就是对产品的各功能进行验证，检查是否符合客户要求
	属于黑盒测试，功能测试侧重点在于前端ui界面，数据展示，图形界面，业务逻辑操作
       接口：
	1.接口测试是检查系统与系统之间，模块与模块之间的接口数据传输是否正确
	属于灰盒测试，接口测试侧重点在于，后端返回的数据是否正确，接口是否正常。
	接口测试的目的：确保正确性和稳定性
	尽早的介入测试，修复成本越低

二十三.接口测试用例包含内容
	1.接口名称
	2.接口地址
	3.请求方法
	4.场景
	5.接口描述
	6.输入数据
	8.预期结果
	9.级别

什么时候做接口测试
	1.接口开发完成或界面没有设计完成
	2.功能或接口有变动
	3.版本更新
	4.增加新功能

安全测试
	身份认证安全
	权限安全
	数据加密
	隐私

接口测试做单接口或多接口
	
	
cookie和session的区别
	1、cookie数据存放在客户的浏览器上，session数据放在服务器上。
	2、cookie不是很安全，别人可以分析存放在本地的cookie并进行cookie欺骗考虑到安全应当使用session。
	3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能考虑到减轻服务器性能方面，应当使用cookie。
	4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。
	5、个人建议：
	将登陆信息等重要信息存放为session
	其他信息如果需要保留，可以放在cookie中

常见的接口状态码
	1.200请求成功
	2.300重定向
	3.400客户端请求语法有误
	4.401访问页面没有授权
	5.403没有权限访问这个页面
	6.404没有这个页面
	7.500服务器内部异常
	8.504服务器超时，没有返回结果

二十四.接口测试的流程及异常情况分析
        流程：
		1、需求分析
		2、api接口文档分析与评审：
			接口业务，鉴权，入参，出参，错误码
		3、测试计划编写
		4、用例设计与评审
		5、环境搭建（工具）
		6、执行用例
		7、缺陷管理
		8、测试报告

　　异常情况分析：
	查看响应码 
	异常返回信息及错误代码
	用filddler抓包
	web端可按F12查看
	查看后端日志

二十五.接口自动化
	1.导包：unittest,requests
	2.通过url传送地址
	3.以字典的形式或直接在url后添加参数
		url="http://www.baidu.com?username=admin&password=123456"
		data={
		            "username":"admin",
		            "password":"123456"
		           }
	4.获取请求的方式：get.post
	5.获取响应信息如：rel=requests.get/post(url,json=data)以json形式显示
	6.获取响应码：print(rel.status_code)
	7.以文本形式显示响应内容：print(rel.text)
	8.进行断言：if....else或assert status_code=200

二十六.充值不到的原因：
	1.网络是否异常
	2.有无点击提示
	3.是否版本更新问题
	4.服务器有无问题

二十七.没有接口文档如何做
	1.跟开发要详细设计进行参考
	2.用fiddler抓包工具

二十八.filddler弱网测试
	1.Ruels->performance->simulate modem speeds
	2.自定义网速：customize rulesz生成证书，修改ms

二十九.postman接口测试步骤
	1.选择请求的方法类型
	2.输入请求的URL（ip+端口+接口路径）
	3.填写接口参数及参数值
	4.发送请求（send）
	5.查看请求返回的结果：返回码，返回信息，响应正文

三十.线上bug如何处理
	1.重新测试，检查是否操作有误
	2.是否为bug，是否偶然出现，是否影响主要功能使用
	3.记录测试过程（截图，视频，重现步骤，日志）提交
	4.对bug的严重等级进行评估。可以上线或延迟上线

三十一.拿到一个项目后如何做
	1.进行需求分析与评审：
		      尽早的熟悉业务流程，逻辑，功能与非功能
		      支持哪些平台，有哪些不同的应用场景
	2.编写测试计划：
		      由项目测试负责人编写
	   	      5W1H原则
	   	      参考需求规格说明书

	3.设计测试用例及评审：
	  	      参考需求文档
	  	      概要及详细设计
	4.执行测试：
		     代码准备完成
		     测试版本稳定
		     用例评审通过
		     环境搭建完毕
		     冒烟测试通过
		     提交，跟踪，回归测试bug
	5.测试评估/报告：
		     项目版本
	   	     测试什么功能模块
	                       用例设计方法
　　　　　　　　	     测试的环境
	  	     发现多少bug
	  	     修复多少bug
	   	     有多少未修复
	   	     有无上线风险
	   	     测试报告是对整个测试过程和版本质量进行评估，确认是否可以上线

三十二.测试用例设计
	1.等价类
	2.边界值
	3.场景法
	4.错误推测法

三十三.如何区分功能和非功能
	功能：确保应用程序的功符合需求规格规范
	          单元，集成，系统，验收

	非功能：评估应用程序的就绪状态
	             性能，安全，兼容，负载，压力，界面，可用性

三十四.http和https的区别
   HTTP：
　　　1.超文本传输协议，明文传输数据，不安全，由请求和响应两部分组成
　　　2.端口号：80
　　　3.无状态，无连接，简单快速，
           4.灵活（支持任意类型的数据对象：Html，json，text，xml）
　　　5.记录HTTP状态技术：
		a.Cookie.数据保存在客户端，安全性低
		b.Session.数据保存在服务器，安全性高，使用多会占用内存	
           6.常用的请求方式：
		a.get：产生一个数据包
		b.post：产生两个数据包
           7.工作于应用层

   HTTPS:
	1.安全超文本传输协议，数据传输前，先加密，再发送到服务器
	2.端口号：443，由HTTP+SSL协议构成
	3.使用HTTPS协议需要CA申请证书，交费，成本高
	4.工作于传输层

三十五.http状态码
	1.1XX表示请求已接受，继续操作
	2.2XX表示响应成功
	3.3XX重定向-要完成请求必须进行更进一步的操作
	4.4XX表示客户端错误-请求语法有误或无法实现
	5.5XX表示服务端错误-服务器未能现实合法的请求

三十六.get和post的区别：属于http请求方式
   GET：
	1.请求参数在请求头，通过URL传递参数
	2.以？的方式传参，通过&连接
	3.明文传输参数，不安全，有长度限制
	4.倾向于获取数据
	5.参数保留在浏览器历史中，可收藏为书签，可缓存
	6.get产生一个数据包：
		a.先把http header和data一起发送，响应状态：200
   POST：
	1.请求参数在请求体，参数不可见，安全，无长度限制
	2.倾向于提交数据
	3.参数不会保存在浏览器历史中，不可收藏为书签，不能缓存
	4.post产生两个数据包：
		a. 浏览器先发送header服务器响应100 continue
		b. 再发送data数据，服务器响应状态：200
	
三十七.app和web的区别
   APP:
	1.属于C/S架构（客户端，服务器）
	2.服务端跟新，客户端也要做相应的修改
	3.性能：响应时间，电量，流量，CPU，GPU，Memory
	4.兼容：分辨率，屏幕尺寸，不同机型，品牌，系统版本
	5.APP专项测试：
		多网测试：
　　　			2g,3g,4g,5g，Wifi下，弱网测试
		中断测试：
　　　			来电，短信，通知等情况下软件处理能力
		安装测试：
　　　			安装时中断，弱网
			安装后删除安装文件
			增量包更新（升级）
			安装时取消安装
			安装完成应用是否可用
			安装完成后，重启应用是否可用
			安装中断
			安装内存不足
			安装网络异常
		卸载测试：
			可正常卸载
			卸载后，重新安装
			卸载后是否残留信息
			卸载时，取消卸载，应用是否正常运行
			卸载中断
			卸载网络异常
			
		界面测试：
　　　			在不同尺寸规格，屏幕下图文显示情况
			触摸屏手机，测试注意手势，横竖屏切换
			多点触控等测试
   WEB:
	1.B/S构架（浏览器，服务器）
、	2.只更新服务器
	3.性能：关注页面响应时间
	4.兼容：不同浏览器，电脑硬件，不同系统方面的兼容
	5.界面，功能，性能，兼容，安全性等的测试

三十八.如何判断App的稳定性：
	1.monkey测试

三十九.性能测试指标：
	1.事务
	2.点击率
	3.吞吐量
	4.资源利用率
	5.tps
	6.并发
	7.响应时间
	
内存
	1.内存溢出：没有足够的空间
	2.内存泄漏：内存一直被占用，无法释放

冷启动和热启动
	冷启动：app后台被杀死
	热启动：app后台继续运行

四十.python元素定位方法
	1.id()
	2.name()
	3.class_name()
	4.tag_name()
	5.link_text()
	6.partial_link_text()
	7.xpath()
	8.css_selector()

四十一.给列表添加一个元素
	1.添加：append
	2.删除：del
	3.长度：len
	4.元组：tuple
四十二.切换多级框架：
	1.switch_to.frame()
四十三.返回上一个框架:
	1.switch_to.default_content()
四十四.切换窗口：
	1.switch_to.window()
四十五.获取当前句
	1.current_window_handle
四十六.获取所有句柄：
	1.window_handles
四十七.获取当前页面快照：
	1.get_screenshot_as_file()
四十八.最大化：
	1.maxmize_windows()
四十九.设置宽高：
	1.set_windows_size()
五十.隐式等待：
	1.implicitly_wait()只要定位到就马上执行，不会等待时限
五十一.显示等待：
	1.webDriverWait()unit()对某个元素设置时间

五十二.页面元素难定位：
	1.不在同一个框架frame。用switch_to.frame()当前框架下的元素
	2.动态id难以定位时。可用xpath路径定位
	3.点击页面速度过快。可设置时间延迟：
		sleep()
		implicitly_wait()
		webDriverwait()

五十三.自动化怎么做：
	从selenium导入webDriver驱动类
	引入time模块
	引入unittest框架
	引入HTMLTestRunner测试报告
	用class定义一个类baidu继承unittst.Unitcase测试用例
	用def定义函数关键字初始化setUp(self)函数
	给变量名赋予浏览器：谷歌self.we=webdriver.Chrome
	再给‘百度网址’赋予一个变量名：self.ww='http://www.baidu.com'
	后使用def定义以test_baidu开头测试用例
	浏览器赋予变量名
	变量名通过get获去网址
	后用定位元素方法获取某个元素，通过send_Keys()寄送数据
	再通过元素定位方法获取某个点击元素，使用click()点击元素
	用def后置条件tearDown(self)退出前，清除可能存在的历史记录
	通过if __name__=='__main__':程序的入口，执行以test开头的测试用例
	也可用try......except进行断言,有错误就会执行except里的内容
	可以用set_srceenshot_as_file()获取有错误的快照
	或者通过if.....else进行判断	
	
	通过unitest.TestSuite()实例化测试套给测试赋予一个变量名
	变量名可以储存测试用例
	后面往测试套里添加addTest(类("测试用例'))
	生成一个file='d:\\测试报告.html'路径便以保存测试结果
	通过HTMLTestRunner实例化运行器
	通过运行器执行测试套

五十四.adb命令
	1.重启：adb reboot
	2.查看版本：adb version
	3.查看设备：adb devices
	4.执行命令：adb shell
	5.连接模拟器：adb conncet 127.0.0.1:62001
	6.Monkey测试：adb shell monkey -p 包名 -v 测试次数
	7.开启服务：adb start-server
	8.关闭服务：adb kill-server
	9. 将电脑文件复制到设备sd卡上:
		adb push 电脑文件路径 /sdcard
	10. 设备文件复制到电脑上:
		adb pull /sdcard/text.txt 电脑文件路径
转账：


输入框测试点：

1.输入符合的字符是否可搜索
2.默认焦点是否定位在输入框
3.页面按钮是否可用
4.输入空格字符串
5.输入字符前空格
6.输入字符后空格
7.输入字符前后空格
8.输入字符空格，再输入字符
9.输入特殊字符~！@#%.....&*
10.输入中英文字符
11.输入数字字符
12.输入中文字符+数字
13.输入中文字符+特殊字符
14.输入英文+数字
15.输入英文+特殊字符
16.输入字符最大值
17.输入字符最小值
18.输入数字最大值
19.输入数字最小值
20.输入年月日
21.输入sql语句
22.输入模糊查询
23.输入信息过长是否可以查询
24.Enter/tab键是否可用
25.输入框是否支持复制粘贴，或不支持复制粘贴
26.输入框是否保留上次搜索历史记录
27.输入前有信息，全选。输入新信息，是否可以输入成功
28.输入框信息是否可以清除，再次输入新信息

兼容性：
　　　1.不同的浏览器，页面显示情况
　　　2.不同操作系统，页面显示情况
　　　3.不同屏幕尺寸，页面显示情况


支付功能如何测：

  界面：
	1.支付页面是否显示正常，页面是否有简洁美观等
	2.文字能否正常显示
	3.按钮的设置，排列是否正常
	4.输入框是否对齐，大小是否适中等
	5.点击支付按钮，是否有提示
	6.取消支付，是否有提示
  功能：
	1.正常完成支付的流程；
	2.支付中断后继续支付的流程；
	3.支付中断后结束支付的流程；
	4.单订单支付的流程；
	5.多订单合并支付的流程；
	6.余额不足；
	7.未绑定银行卡；
	8.密码错误；
	9.密码错误次数过多；
	10.找人代付；
	11.是否支持指纹支付
	12.弱网状态下，连续点击支付功能功能，会不会支付多次；
	13.有优惠券、折扣、促销价进行结算是否正确；
	14.不同的支付方式：银行卡网银支付、支付宝支付、微信支付等；
	15.不同终端上支付：包括PC端的支付、笔记本电脑的支付、平板电脑的支付、手机端的支付等；
	16.支付失败后，再次支付。
  网络：
  中断：
  性能：
	1.多个用户并发支付能否成功
	2.支付响应时间
  兼容：
	1.不同浏览器
	2.不同操作系统，分辨率

购物车测试用例：
   测试点：购物车功能可点击
	购物车跳转正常
	界面（简洁美观，布局合理，易用易学易操作，操作流畅，界面显示速度，无错别字，
	图片显示正常，适应不同浏览器，设备，屏幕尺寸，分辨率）
	购物车显示正常
	未登录可否添加商品
	登录后商品显示
	可添加商品
	商品添加顺序
	同类的商品添加是否有限制 
	不同类的商品添加是否有限制及正常显示
	商品显示
	价格显示
	数量显示
	店面显示
	购物车商品上限
	商品增加及删减按钮
	编辑删除
	单个删除
	全选删除
	删除提示
	无货显示
	有货显示
	地址显示
	不配送或无货地区地址显示
	降价显示及提示
	优惠券及促销显示
	分期显示
	商品链接
	商品分享
	购物车消息通知
	网络
	兼容
	稳定
	性能
	易用
	
   界面：
	1.界面设计是否美观，显示是否正常
	2.界面布局是否合理
	3.购物车入口数量设计是否合理
	4.购物车链接图是否显示正常
	5.鼠标购物车图标，是否有购物车界面，显示是否正常

   功能：
添加商品：
	1.添加商品是否成功
	2.添加单个商品是否有数量限制
	3.添加商品种类是否有限制
	4.添加同类商品的不同规格商品显示是否明显
	5.加入购物车商品排序是否合理
	6.是否具备点击置顶功能
	7.是否支持单个或多个商品分享
	8.不支持发货地区是否提示
	9.购物车商品没货时显示状况
	10.秒杀的商品是否有计时信息显示

删除商品：

	1.能否删除单个商品
	2.是否可全选商品，并删除
	3.删除的商品是否确认有提示
	
跳转商品：

	1.跳转商品图片是否显示正常
	2.跳转商品链接显示内容是否完整，是否过长
	3.点击图片或链接是否能够跳转商品详情

编辑商品数量:

	1.是否有通过+ -编辑商品数量方式
	2.是否有通过输入直接编辑商品数量方式
	3.编辑商品数量是否有上下限
	4.编辑商品数量是否考虑库存情况

　　　显示商品数量，金额，总额等:

	1.商品加入购物车内是否和原价格一致
	2.商品数量显示是否正确
	3.选择商品总数是否正确
	4.选中商品价格总额是否正确

	进入商品购物或结算:

	1.购物车是否有进入购物链接
	2.购物车是否有进入结算链接

	购物车与用户模块关联：

	1.未登录用户是否可以添加商品到购物车
	2.未登录用户添加商品到购物车，登录后是否将商品合并到用户购物车
	3.若不允许未登录用户添加商品到购物车，点击加购物车后是否有登录提示
	4.用户有会员折扣时，购物车内商品价格是否对应

	购物车与商品订单模块关联：

	1.加入购物车商品有价格调整，购物车内商品价格是否跟随变化
	2.加入购物车商品，库存变化时购物车是否有对应调整
	3.购物车商品确认订单后是否会从购物车清除
	4.订单价格是否与购物车内一致

	购物车与优惠活动模块关联：

	1.商家发放用户优惠券购物车对应变化
	2.商品满减活动，购物车价格对应变化

  性能：
	1.进入购物车页面 消耗时长
	2.添加商品到购物车时长
	3.进入购物车结算时长
	4.对购物车页面内容变更，页面内容更新速度。（增加某个购买数量，页面对应显示更新速度）

  兼容：
	1.不同设备上显示和使用是否正常
	2.不同浏览器显示和使用是否正常
	3.不同的屏幕，分辨率，尺寸显示情况

  多网:
	1.2G、3G、4G、wifi网络环境下应用的各功能可正常运行
	2.网络异常时，数据交换是否会有提醒
	3.有网到无网再到有网，数据是否可以自动恢复，正常加载

  异常：
	1.没有内存时，APP是否能够正常响应
	2.横竖屏切换展示
	3.APP运行时网络中断
	4.反复操作某一个功能，不断点击和刷新，是否出现闪退
	5.APP运行时接入电话、短信、微信时，是否正常运行

登录页面怎么测：

   界面：
	1.登录页面显示是否正常，页面是否简洁美观等
	2.文字，验证码图片能否正常显示，相应的提示信息是否正确
	3.按钮的设置，排列是否正常
	4.页面默认焦点（箭头）是否定位在用户名输入框
	5.首次登录时输入是否为空，或有文案时，点击输入时是否消失
	6.登录，重置等按钮是否可用
	7.页面的前进，后退，刷新按钮是否可用
  功能：
	1.正确的用户名及密码，验证是否登录成功
	2.已注册的用户名，错误密码，验证是否登录失败
	3.未注册的用户名，任意密码，验证是否登录失败
	4.用户名及密码为空，验证是否登录失败
	5.用户名输入，密码为空，验证是否登录失败
	6.空格再输入用户名，密码正确，验证是否登录失败
	7.用户名输入1+1，密码正确，验证是否登录失败
	8.正确的用户名及密码，输入正确验证码，验证是否登录成功
	9.正确的用户名及密码，输入错误验证码，验证是否登录成功
	10.正确的用户名及密码，输入验证码超时，验证是否登录成功	
 	11.密码是否规定大小写
	12.输入密码是否加密
	13.输入密码加密，是否可点击小眼睛显示
	14.用户名是否限制最小及最大字符长度
	15.密码是否限制最小及最大字符长度
	16.密码纯数字或纯字符，提示是否字母加数字
	17.忘记密码是否可找回
	18.找回密码是否需短信验证码
	19.忘记密码是否可重新注册
	20.验证码是否可切换
	21.刷新页面是否会刷新验证码
	22.第三方登录是否可登录（QQ，微信）
	23.手机号是否登录
	24.用户名登录成功，是否可记住用户名，密码
	25.其他平台登录，提醒是否为本人登录
	26.Tab,Enter,Esc是否可用
  网络：
	1.在不同的网络下登录：2/3/4/5G网络下登录情况
	2.在wifi/或无线网下登录
	3.在弱网情况下登录
  中断：
	1.登录时来电，短信，通知等情况

  安全：
　　　1.密码是否不支持复制粘贴
	2.错误登录次数是否有限制
	3.是否屏蔽sq注入如：1=1
	4.用户名和密码登录是否加密，再发送到服务器
  性能：
	1.用户登录响应时间是否遵循258原则
	2.高并发场景下用户登录响应时间是否小于5秒
	3.打开登录界面，需要几秒，输入正确的用户名和密码成功跳转后，需要几秒
  兼容：
	1.不同浏览器下，验证登录页面的显示及功能正确性
	2.相同浏览器不同版本下，验证登录页面的显示及功能正确性
	3.不同移动设备下不同浏览器下，验证登录页面的显示及功能正确性
	4.不同分辨率的界面下，验证登录页面的显示及功能正确性
	
微信红包怎么测试：

  界面：
	1.红包页面是否正常显示
	2.页面是否简洁美观，有无错别字，易用
	3.页面排版是否合理
	4.输入框按钮是否可点击
	5.点击输框是否弹出输入键盘
  功能：
	1.正确的金额+无留言+无表情
	2.错误的金额+无留言+无表情
	3.正确的金额+有留言+无表情
	4.错误的金额+有留言+无表情
	5.正确的金额+无留言+有表情
	6.错误的金额+无留言+有表情
	7.正确的金额+有留言+有表情
	8. 错误的金额+有留言+有表情
	9.金额最大值
	10.金额最小值
	11.金额不足是否提示
	12.输入中文数字
	13.输入中文+英文+特殊字符组合
	14.金额是否支持复制粘贴
	15.金额为空/空格金额
	16.输入金额是否支持删除，修改
  表情：
	1.选择自定义的表情测试
	2.选择下载的表情
	3.录制表情测试
	4.表情的增删改查
	5.发送红包封面是否可以添加，修改
  支付：
	1.是否支持指纹支付（正确或不正确指纹）
	2.是否支持密码支付（正确或不正确的密码）
	3.指纹支付三次失败，是否会跳出提示密码输入
	4.红包发送成功后，对应金额是否会减少
	5.发送者/接受者可以点击红包查看到红包的具体信息，且金额，留言，表情均能正确显示
	6.好友点击红包之后，会收到零钱增加，再次点击，只能看到红包信息
	7.红包24小时未领取，将返回原账户并提示，零钱得到相应的增加
	8.24小时对方未领取，点击红包提示已过期，无法看到红包金额
	9.点击右上角红包记录，可以查看刚发送的红包的金额
	10.当红包超过24小时之后，则无法查看红包被每个人领取的详细信息
     11.发送红包是否可以输入口令
	12.发送红包是否可以限制领取人数
	13.红包是否支持单发/群发
  网络：
	1.发红包/抢红包时网络有延迟
	2.在不同网络环境下发红包/抢红包
  兼容：
	1.在不同操作系统下
	2.相同的操作系统不同版本
	3.不同的设备，机型
	4.不同的屏幕尺寸，页面显示情况
  性能：
	1.发送红包响应时间
	2.多个用户同时发送红包
	3.连续点击发送
	4.发送红包所耗的电量
	5.发送红包消耗的流量
	6.发送红包所占内存等
  中断：
	1.网络异常
	2.低电量
	3.断电
	4.来电
	5.短信
	6.无网测试
	7.弱网测试

抖音评论怎么测：

  界面：
	1.抖音评论页面是否正常显示
	2.排版是否合理，界面是否简洁美观，易用
	3.点击评论是否可展开
	4.页面默认焦点是否定位在输入框
	5.发送按钮是否可用
  功能：
	1.评论正常发送成功
	2.用户未登录是否可发送评论
	3.评论成功是否可见
	4.评论成功别人是否可见
	5.中文+英文+数字+特殊字符是否可发送
	6.敏感字体是否可发送
	7.特殊图片及动态图是否可发送
	8.发送字体是否字数限制
	9.图片+字体组合
	10.可发送图片的数量
	11.可发送图片的格式大小
	12.动态图+字体组合
	13.可发送动态图的数量	
	14.可发送动态图的格式大小
	15.可发送表情
	16.自定义图片
	17.是否可下载表情及图片
	18.评论区的图片，动态图是否可收藏
	19.评论是否可提醒指定的人可见
	20.对他人的评论是否可以评论
	21.对他人的评论成功后对方是否可见/提示
	22.他人对自己的评论是否可见/提示
	23.评论过多是否可收缩或展开
	24.评论是否可见他人的头像
	25.点击对方的头像是否查看对方信息
	26.评论是否可以点赞
	27.好的评论是否有特殊标识
	28.评论是否可发送链接
	29.评论内容是否可复制粘贴
	30.
  性能:
	1.发送评论所用的时间
	2.连续点击发送按钮，是否会出现异常情况

	3.发送评论所用的内存
	4.发送评论所耗流量
	5.发送评论所耗电量
	6.多用户并发场景下处理情况
  兼容：
	1.不同操作平台，页面显示情况
	2.相同操作平台不同版本，页面显示情况
	3.不同的屏幕
	4.不同的分辨率
         网络：
  中断：
	1.多网测试
	2.弱网测试
	3.来电
	4.短信
	5.其他通知
	6.低电量
	
微信聊天测试用例：

  界面：
	1.双方头像是否显示
	2.聊天界面是否简洁美观
	3.易用，易学，易操作
	4.页面默认焦点是否定位到输入框
	5.页面排版布局是否合理
	6.页面按钮是否可用
  功能：
	1.正常网络下发送信息情况，是否正常发送
	2.正常网络下接受信息情况，是否正常接受
	3.发送失败是否提示
	4.发送失败是否可重新发送
	5.被拉黑或好友已删除发送信息，是否有提示
	6.每个时间断发送信息是否有：日期，时间显示
	8.发送的信息是否可以转发，批量转发
	9.是否支持复制粘贴信息
	10.发送/接受的英文是否支持翻译
	11.接受的图片，文件等信息是否支持收藏
	12.发送/接受的文件支持格式大小
	13.接受的文件是否可在其他应用打开
	14.群发是否支持艾特他人
	15.群发是否支持群发文件，群聊文件
	16.群聊：发送消息是否所有成员全部可见
	17.群聊：@单个人，多个人，全部人时，对象是否会收到提醒
	18.群聊：发起群视频，群语音时，所有被邀请的成员是否能加入群聊
	19.群聊：群聊数量统计是否正确
	20.点击对方头像是否进入主页
	21.是否支持拍照发送，录屏发送
	22.消息发送后，是否支持在一定时间范围内可以撤回功能，超出指定时间范围，是否不支持撤回功能
	23.发送名片、发送位置信息功能是否正常
	24.发送红包、转账功能是否正常
	25.语音聊天、视频聊天相互转换功能是否正常
	26.发送语音聊天、视频聊天时，长时间未接听，是否有提示
	27.未加好友情况下，加好友功能是否正常
	28.互相是好友的情况下，发消息功能是否正常
	29.连续发消息消息统计数量功能正常
	30.消息较多时，是否支持一键回到之前浏览位置
	31.发送文字字数限制
	32.发送图片数量限制
	33.发送图片最大格式
	34.发送图片是否可预览，编辑，原图
	35.发送动态图数量限制
	36.发送动态图最大格式
	37.是否支持语音发送
	38.发送/接受语音是否转换成文字
	39.发送语音途中是否可以取消
	40.敏感字体，图片发送情况
  性能：
	1.发送图片，文字，视频，语音等消息，对是否在规定时间内收到
	2.发送图片，文字，视频，语音等信息，对内存的消耗
	3.发送图片，文字，视频，语音等消息，对流量的消耗
	4.多用户并发场景下的处理情况
  兼容：
	1.不同的输入法
	2.不同手机型号
	3.不同的手机系统
	4.不同浏览器
	5.不同电脑型号及版本
	6.不同的分辨率，屏幕尺寸
  多网：
	1.不同无线网下，聊天信息发送的情况
	2.非WiFi情况下，对流量的使用情况
	3.弱网条件下，各类功能是否可正常使用，视频，语音聊天等
  中断：
	1.来电，短信，通知，低电量，网络异常等测试
场景组合测试：

	1.给网络条件不好或者无网络的好友发消息，恢复网络条件时，是否能接收正常
	2.给网络条件不好或者无网络的好友发语音、视频消息时，恢复网络条件时，是否有提示
	3.正在编辑文字消息时，语音、视频聊天中断结束后，是否回到正在编辑的聊天框
	4.正在语音、视频聊天时，电话或者短信进入，是否会有提示
	5.语音、视频聊天时，手机进入低电量模式，是否会有提示

朋友圈点赞测试用例：

	1 是否可以点赞成功
	2 点赞成功后是否可以去取消
	3 没有网络情况下是否可以点赞
	4 点赞成功后是否可以评论
	5 是否按照点赞顺序，按时间进行排序
	6 点赞一排可以显示多少人头像
	7 是否有点赞人数限制
	8 是否可以多次点赞
	9 点赞完成后对手机是否有影响
	10 点赞时手机是否有会出现故障
	11 是否可以点赞刚删除的朋友圈
	12 同一个朋友圈，是否能有多人观看及点赞
	13 朋友圈是否有限制不可观看
	14 朋友圈是否有设置三天后不可见
	15 朋友圈是否对你开放
	16 好友是否将你拉黑
	17 是否可以点赞1天前朋友圈
	18 是否可以点赞7天前朋友圈
	19 是否可以点赞30天前朋友圈
	20 是否可以点赞1年前朋友圈
	21 是否可以点赞半年前朋友圈
	22 是否可以点击自己发送的朋友圈
	23 是否可以点击刚加好友的朋友圈
	24 朋友点赞是否有提示本人收到朋友圈被朋友点赞信息
	25 朋友评论是否有提示本人收到朋友圈被朋友评论信息
	26 是否能接收朋友圈发的纯文字
	27 是否能接朋友圈发的表情
	28 是否能接受朋友圈发的图片
	29 是否能接受朋友圈发的视频
	30 是否能接收朋友圈发的音频

性能测试
	1 点赞完成后下方点赞的头像显示速度
	2 网速对点赞是否有影响
	3 能否及时刷新点赞人数
	4 能否及时刷新评论人数
	5 网速对评论是否有影响

界面测试
	1 界面与ui设计的效果图是否一致
	2 图片位置显示是否正确
	3 下拉朋友圈是否刷新
	4 是否是中午简体
	5 是否有错别字

易用性测试
	1 操作是否简单
	2 是否适合于不同年龄段人使用

兼容性测试
	1 不同操作系统是否好用
	2 不同微信版本
	3 不同手机型号

安全测试
	1 朋友圈内容涉嫌不良信息
	2 看是否为好友，不是好友不可以进行看别朋友圈
	3 微信必须要登录

弱网测试
	1 2g网络点赞需要时间/是否可以点赞/是否可以评论
	2 3g网络点赞需要多长时间/是否可以点赞/是否可以评论
	3 4g网络点赞时间多长时间/是否可以点赞/是否可以评论
	4 5g网络点赞时间多长时间/是否可以点赞/是否可以评论
	5 公共网络点赞多长时间/是否可以点赞/是否可以评论

微信语音通话设计测试用例？
    界面：
    功能：
    性能：
    兼容：
    多网：
    中断：

使用xmind编写测试用例的好处
	1.梳理思绪
	2.便于记忆
	3.容易读懂
	4.绘制方便
	5.有利于评审
	6.方便整理数据




